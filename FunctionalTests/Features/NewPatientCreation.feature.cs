// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FunctionalTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NewPatientCreation")]
    public partial class NewPatientCreationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "NewPatientCreation.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "NewPatientCreation", "Creating New Patient Record in the PSC Application", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verifying Patient is created with all Mandatory Fields")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        [NUnit.Framework.CategoryAttribute("PatientCreation")]
        public void VerifyingPatientIsCreatedWithAllMandatoryFields()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression",
                    "PatientCreation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifying Patient is created with all Mandatory Fields", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("I am in PSC login screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "Password",
                            "NACS Code"});
                table1.AddRow(new string[] {
                            "Supervisor",
                            "supe",
                            "FA391"});
#line 8
 testRunner.When("I login to PSC application using below user", ((string)(null)), table1, "When ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "SurName"});
                table2.AddRow(new string[] {
                            "Patient"});
#line 11
 testRunner.And("I search patient with", ((string)(null)), table2, "And ");
#line hidden
#line 14
 testRunner.And("I search for patient Patient, UserTest from the patient search results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.When("I click the Add Patient button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 16
 testRunner.Then("I should navigate to Add New Patient Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "First Name",
                            "Sur Name",
                            "DOB",
                            "Gender",
                            "Street Name",
                            "Post Code",
                            "Exemption Type",
                            "MiddleName"});
                table3.AddRow(new string[] {
                            "UserTest",
                            "Patient",
                            "12-03-1952",
                            "Male",
                            "High Street",
                            "WD17 1DS",
                            "A",
                            "Q"});
#line 17
 testRunner.And("I enter the mandatory fileds", ((string)(null)), table3, "And ");
#line hidden
#line 20
 testRunner.When("I click on Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.Then("I verify created patient is listed in the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verifying New Patient is created with all Fields")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        public void VerifyingNewPatientIsCreatedWithAllFields()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifying New Patient is created with all Fields", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 24
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 25
 testRunner.Given("I am in PSC login screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "Password",
                            "NACS Code"});
                table4.AddRow(new string[] {
                            "Supervisor",
                            "supe",
                            "FA391"});
#line 26
 testRunner.When("I login to PSC application using below user", ((string)(null)), table4, "When ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "SurName"});
                table5.AddRow(new string[] {
                            "Patient"});
#line 29
 testRunner.And("I search patient with", ((string)(null)), table5, "And ");
#line hidden
#line 32
 testRunner.And("I search for patient Patient, UserTest Q from the patient search results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("I click the Add Patient button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.Then("I should navigate to Add New Patient Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Title",
                            "First Name",
                            "Middle Name",
                            "Sur Name",
                            "NHS No",
                            "Patient No",
                            "Preffered Name",
                            "DOB",
                            "Gender",
                            "House Number",
                            "Street Name",
                            "City",
                            "Town",
                            "Post Code",
                            "Home No",
                            "Mobile No",
                            "Work No",
                            "Fax No",
                            "Email",
                            "Exemption Type",
                            "Ethinicity",
                            "Prescribers",
                            "Prescriber Name",
                            "Prescriber Org Name",
                            "Note",
                            "JoinNursingHome",
                            "HomeName"});
                table6.AddRow(new string[] {
                            "Dr",
                            "UserTest",
                            "Q",
                            "Patient",
                            "",
                            "2345",
                            "Mark",
                            "10-07-1958",
                            "Male",
                            "5612111",
                            "ParWay",
                            "City",
                            "town",
                            "A9A 9AA",
                            "123",
                            "1233",
                            "432",
                            "43212",
                            "unknown@test.com",
                            "A",
                            "Indian",
                            "Dentist",
                            "Test PrescribingOrganisation",
                            "Test PrescribingOrganisation",
                            "Patient has Allergy",
                            "Join Nursing Home",
                            "TestNursingHome"});
#line 35
 testRunner.And("I enter the details of the patient", ((string)(null)), table6, "And ");
#line hidden
#line 38
 testRunner.When("I click on Save Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.And("I handle all warnings in PMR page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.Then("I verify created patient is listed in the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verifying Patient is created direclty in Db")]
        [NUnit.Framework.CategoryAttribute("Regression")]
        public void VerifyingPatientIsCreatedDirecltyInDb()
        {
            string[] tagsOfScenario = new string[] {
                    "Regression"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifying Patient is created direclty in Db", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 43
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 44
 testRunner.Given("I am in PSC login screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "UserName",
                            "Password",
                            "NACS Code"});
                table7.AddRow(new string[] {
                            "Supervisor",
                            "supe",
                            "FA391"});
#line 45
 testRunner.When("I login to PSC application using below user", ((string)(null)), table7, "When ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "SurName"});
                table8.AddRow(new string[] {
                            "Patient"});
#line 48
 testRunner.And("I search patient with", ((string)(null)), table8, "And ");
#line hidden
#line 51
 testRunner.And("I search for patient Patient, UserTest from the patient search results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Gender",
                            "Sur Name",
                            "First Name",
                            "DOB",
                            "Street Name",
                            "Post Code",
                            "Exemption Type"});
                table9.AddRow(new string[] {
                            "M",
                            "Patient",
                            "UserTest",
                            "04-01-1941",
                            "High Street",
                            "WD17 1DS",
                            "C"});
#line 52
 testRunner.And("I create a new patient record using the below details", ((string)(null)), table9, "And ");
#line hidden
#line 55
 testRunner.Then("I verify created patient is listed in the database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
